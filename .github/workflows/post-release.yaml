name: Post-release
on:
  workflow_run:
    workflows:
      - Release
    types:
      - completed

env:
  # Enable reproducible builds.
  GOFLAGS: -trimpath
  CGO_ENABLED: '0'
  GO_EXTLINK_ENABLED: '0'

jobs:
  # Load version from artifact on successful release.
  #
  load:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download artifact
        uses: actions/github-script@4.0.2
        env:
          run_id: ${{ github.event.workflow_run.id }}
          workspace: ${{ github.workspace }}
        with:
          script: |
            const fs = require('fs')
            const runID = parseInt(process.env.run_id)
            const artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: runID,
            })
            const matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == 'version.txt'
            })[0]
            const download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            })
            fs.writeFileSync(`${process.env.workspace}/version.zip`, Buffer.from(download.data))
      - name: Load version
        id: version
        run: |
          unzip version.zip
          echo "::set-output name=version::$(cat version.txt)"

  # Merge release tags into release branch.
  #
  merge:
    name: Merge
    runs-on: ubuntu-latest
    needs:
      - load
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Install Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.16.4
      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.5
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: merge-go-${{ hashFiles('**/go.sum') }}
          restore-keys: merge-go-
      - name: Set up Git config
        run: |
          git config user.name actions-user
          git config user.email actions@github.com
      - name: Merge release
        env:
          version: ${{ needs.load.outputs.version }}
        run: |
          git merge \
            refs/tags/${version} \
            refs/tags/engine/badgerengine/${version} \
            refs/tags/cmd/genji/${version}
      - name: Add replace directives
        run: |
          (
            cd engine/badgerengine
            go mod edit -replace=github.com/tie/genji-release-test=../../ 
            go mod tidy
          )
          (
            cd cmd/genji
            go mod edit \
              -replace=github.com/tie/genji-release-test=../../ \
              -replace=github.com/tie/genji-release-test/engine/badgerengine=../../engine/badgerengine
            go mod tidy
          )
      - name: Create PR
        uses: peter-evans/create-pull-request@v3.9.2
        with:
          author: actions-user <actions@github.com>
          committer: actions-user <actions@github.com>
          commit-message: |
            Back to devel mode [skip ci]
          base: ${{ github.event.workflow_run.head_branch }}
          branch: merge-release-${{ needs.load.outputs.version }}
          delete-branch: true
          title: 'Merge release tags for ${{ needs.load.outputs.version }}'
          body: |
            This PR merges ${{ needs.load.outputs.version }} release tags.

            **DO NOT MERGE** if the latest commit does not contain `[skip ci]` and target branch is release branch. Otherwise merge would trigger the release on push event. See https://github.blog/changelog/2021-02-08-github-actions-skip
